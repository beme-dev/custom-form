/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as FormRouteRouteImport } from './routes/form/route'
import { Route as DropzoneRouteRouteImport } from './routes/dropzone/route'
import { Route as CountingRouteRouteImport } from './routes/counting/route'
import { Route as IndexRouteRouteImport } from './routes/index/route'

const FormRouteRoute = FormRouteRouteImport.update({
  id: '/form',
  path: '/form',
  getParentRoute: () => rootRouteImport,
} as any)
const DropzoneRouteRoute = DropzoneRouteRouteImport.update({
  id: '/dropzone',
  path: '/dropzone',
  getParentRoute: () => rootRouteImport,
} as any)
const CountingRouteRoute = CountingRouteRouteImport.update({
  id: '/counting',
  path: '/counting',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRouteRoute = IndexRouteRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRouteRoute
  '/counting': typeof CountingRouteRoute
  '/dropzone': typeof DropzoneRouteRoute
  '/form': typeof FormRouteRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRouteRoute
  '/counting': typeof CountingRouteRoute
  '/dropzone': typeof DropzoneRouteRoute
  '/form': typeof FormRouteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRouteRoute
  '/counting': typeof CountingRouteRoute
  '/dropzone': typeof DropzoneRouteRoute
  '/form': typeof FormRouteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/counting' | '/dropzone' | '/form'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/counting' | '/dropzone' | '/form'
  id: '__root__' | '/' | '/counting' | '/dropzone' | '/form'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRouteRoute: typeof IndexRouteRoute
  CountingRouteRoute: typeof CountingRouteRoute
  DropzoneRouteRoute: typeof DropzoneRouteRoute
  FormRouteRoute: typeof FormRouteRoute
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/form': {
      id: '/form'
      path: '/form'
      fullPath: '/form'
      preLoaderRoute: typeof FormRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dropzone': {
      id: '/dropzone'
      path: '/dropzone'
      fullPath: '/dropzone'
      preLoaderRoute: typeof DropzoneRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/counting': {
      id: '/counting'
      path: '/counting'
      fullPath: '/counting'
      preLoaderRoute: typeof CountingRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRouteRoute: IndexRouteRoute,
  CountingRouteRoute: CountingRouteRoute,
  DropzoneRouteRoute: DropzoneRouteRoute,
  FormRouteRoute: FormRouteRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
