/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as FormRouteImport } from './routes/form'
import { Route as DropzoneRouteImport } from './routes/dropzone'
import { Route as CountingRouteImport } from './routes/counting'
import { Route as IndexRouteImport } from './routes/index'

const FormRoute = FormRouteImport.update({
  id: '/form',
  path: '/form',
  getParentRoute: () => rootRouteImport,
} as any)
const DropzoneRoute = DropzoneRouteImport.update({
  id: '/dropzone',
  path: '/dropzone',
  getParentRoute: () => rootRouteImport,
} as any)
const CountingRoute = CountingRouteImport.update({
  id: '/counting',
  path: '/counting',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/counting': typeof CountingRoute
  '/dropzone': typeof DropzoneRoute
  '/form': typeof FormRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/counting': typeof CountingRoute
  '/dropzone': typeof DropzoneRoute
  '/form': typeof FormRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/counting': typeof CountingRoute
  '/dropzone': typeof DropzoneRoute
  '/form': typeof FormRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/counting' | '/dropzone' | '/form'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/counting' | '/dropzone' | '/form'
  id: '__root__' | '/' | '/counting' | '/dropzone' | '/form'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CountingRoute: typeof CountingRoute
  DropzoneRoute: typeof DropzoneRoute
  FormRoute: typeof FormRoute
}

declare module '@tanstack/solid-router' {
  interface FileRoutesByPath {
    '/form': {
      id: '/form'
      path: '/form'
      fullPath: '/form'
      preLoaderRoute: typeof FormRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dropzone': {
      id: '/dropzone'
      path: '/dropzone'
      fullPath: '/dropzone'
      preLoaderRoute: typeof DropzoneRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/counting': {
      id: '/counting'
      path: '/counting'
      fullPath: '/counting'
      preLoaderRoute: typeof CountingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CountingRoute: CountingRoute,
  DropzoneRoute: DropzoneRoute,
  FormRoute: FormRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
